{"remainingRequest":"/Users/den/Desktop/projects/test/node_modules/thread-loader/dist/cjs.js!/Users/den/Desktop/projects/test/node_modules/babel-loader/lib/index.js!/Users/den/Desktop/projects/test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/den/Desktop/projects/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/den/Desktop/projects/test/resources/frontend/components/LoginForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/den/Desktop/projects/test/resources/frontend/components/LoginForm.vue","mtime":1605189534519},{"path":"/Users/den/Desktop/projects/test/node_modules/cache-loader/dist/cjs.js","mtime":1592927704205},{"path":"/Users/den/Desktop/projects/test/node_modules/thread-loader/dist/cjs.js","mtime":1592927704070},{"path":"/Users/den/Desktop/projects/test/node_modules/babel-loader/lib/index.js","mtime":1605083852619},{"path":"/Users/den/Desktop/projects/test/node_modules/cache-loader/dist/cjs.js","mtime":1592927704205},{"path":"/Users/den/Desktop/projects/test/node_modules/vue-loader/lib/index.js","mtime":1605083853653}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgZ2V0VmFsaWRhdGlvbkVycm9ycyB9IGZyb20gJ0AvYXBpJzsKaW1wb3J0IEF1dGhSZXF1ZXN0ZXIgZnJvbSAnQC9hcGkvQXV0aFJlcXVlc3Rlcic7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiAoKSA9PiAoewogICAgZm9ybTogewogICAgICBsb2dpbjogbnVsbCwKICAgICAgcGFzc3dvcmQ6IG51bGwKICAgIH0sCiAgICBlcnJvcnM6IHt9CiAgfSksCiAgbWV0aG9kczogewogICAgYXN5bmMgc2VuZCgpIHsKICAgICAgdHJ5IHsKICAgICAgICBhd2FpdCBBdXRoUmVxdWVzdGVyLmxvZ2luKHRoaXMuZm9ybSk7CiAgICAgICAgdGhpcy5mb3JtID0ge307CiAgICAgICAgdGhpcy5lcnJvcnMgPSB7fTsKICAgICAgICBhd2FpdCB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgICBuYW1lOiAnaG9tZScKICAgICAgICB9KTsKICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgIHRoaXMuZXJyb3JzID0gZ2V0VmFsaWRhdGlvbkVycm9ycyhlKTsKICAgICAgfQogICAgfQoKICB9Cn07"},{"version":3,"sources":["LoginForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,SAAA,mBAAA,QAAA,OAAA;AACA,OAAA,aAAA,MAAA,qBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,OAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,KAAA,EAAA,IADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,MAAA,EAAA;AALA,GAAA,CADA;AAQA,EAAA,OAAA,EAAA;AACA,UAAA,IAAA,GAAA;AACA,UAAA;AACA,cAAA,aAAA,CAAA,KAAA,CAAA,KAAA,IAAA,CAAA;AACA,aAAA,IAAA,GAAA,EAAA;AACA,aAAA,MAAA,GAAA,EAAA;AACA,cAAA,KAAA,OAAA,CAAA,IAAA,CAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA,CAAA;AACA,OALA,CAKA,OAAA,CAAA,EAAA;AACA,aAAA,MAAA,GAAA,mBAAA,CAAA,CAAA,CAAA;AACA;AAEA;;AAXA;AARA,CAAA","sourcesContent":["<template>\n    <v-form>\n        <v-card class=\"elevation-12\">\n\n            <v-toolbar dark flat>\n                <v-toolbar-title>\n                    Авторизация\n                </v-toolbar-title>\n            </v-toolbar>\n\n            <v-card-text>\n                <v-text-field v-model=\"form.login\"\n                              label=\"Логин\"\n                              :error-messages=\"errors.login\"\n                              prepend-icon=\"mdi-account\"/>\n\n                <v-text-field v-model=\"form.password\"\n                              label=\"Пароль\"\n                              :error-messages=\"errors.password\"\n                              prepend-icon=\"mdi-lock\"\n                              type=\"password\"/>\n            </v-card-text>\n\n            <v-card-actions>\n                <v-spacer/>\n                <v-btn dark\n                       @click.prevent=\"send\">\n                    Войти\n                </v-btn>\n            </v-card-actions>\n\n        </v-card>\n    </v-form>\n</template>\n\n<script>\n    import {getValidationErrors} from '@/api'\n    import AuthRequester from '@/api/AuthRequester'\n\n    export default {\n        data: () => ({\n            form: {\n                login: null,\n                password: null,\n            },\n            errors: {},\n        }),\n        methods: {\n            async send() {\n                try {\n                    await AuthRequester.login(this.form)\n                    this.form = {}\n                    this.errors = {}\n                    await this.$router.push({name: 'home'})\n                } catch (e) {\n                    this.errors = getValidationErrors(e)\n                }\n\n            },\n        },\n    }\n</script>\n"],"sourceRoot":"resources/frontend/components"}]}